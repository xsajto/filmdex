name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Custom image tag (optional, defaults to current date)'
        required: false
        type: string
      registry_path:
        description: 'Registry path (e.g., filmdex)'
        required: false
        default: 'filmdex'
        type: string

env:
  REGISTRY_URL: registry.sajboch.cz
  IMAGE_NAME: filmdex

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js (for dependency caching)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Set image tag
        id: tag
        run: |
          if [ -n "${{ inputs.image_tag }}" ]; then
            echo "tag=${{ inputs.image_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          fi

      - name: Set registry path
        id: path
        run: |
          if [ -n "${{ inputs.registry_path }}" ]; then
            echo "path=${{ inputs.registry_path }}" >> $GITHUB_OUTPUT
          else
            echo "path=${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.api
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY_URL }}/${{ steps.path.outputs.path }}:${{ steps.tag.outputs.tag }}
            ${{ env.REGISTRY_URL }}/${{ steps.path.outputs.path }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDPLATFORM=linux/amd64
            TARGETPLATFORM=linux/amd64