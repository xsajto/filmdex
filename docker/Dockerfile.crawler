# Multi-stage Docker build for TMDB Crawler
# This Dockerfile is optimized for running the TMDB crawler in production
# Target architecture: linux/amd64

ARG BUILDPLATFORM=linux/amd64
ARG TARGETPLATFORM=linux/amd64

FROM --platform=$BUILDPLATFORM node:20-alpine AS base

# Install system dependencies needed for native packages
RUN apk add --no-cache \
    sqlite \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./
COPY tsconfig.json ./

# Install all dependencies for build phase
ENV HUSKY=0
RUN pnpm install --frozen-lockfile --ignore-scripts

# Copy source code
COPY src/ ./src/
COPY prisma/ ./prisma/

# Generate Prisma client
RUN pnpm exec prisma generate

# Build TypeScript
RUN pnpm run build

# Production stage
FROM --platform=$TARGETPLATFORM node:20-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache \
    sqlite \
    curl \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Copy built application and dependencies
COPY --from=base /app/dist ./dist
COPY --from=base /app/generated ./generated
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/package*.json ./
COPY --from=base /app/prisma ./prisma

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S crawler -u 1001

# Create data directory and set permissions
RUN mkdir -p /app/data /app/logs && \
    chown -R crawler:nodejs /app

USER crawler

# Environment variables
ENV NODE_ENV=production
ENV DATABASE_URL="file:./data/crawler.db"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node -e "console.log('Crawler health check OK')" || exit 1

# Labels
LABEL maintainer="movies-crawler"
LABEL description="TMDB Crawler for movie and TV show data"
LABEL version="1.0.0"

# Default command - run TMDB crawler
CMD ["node", "dist/crawlers/tmdb/tmdb.crawler.js"]

# Alternative commands that can be used:
# CMD ["node", "dist/scripts/tmdb-resume.js"]  # Resume crawler
# CMD ["npx", "prisma", "studio", "--port", "5555"]  # Database admin
